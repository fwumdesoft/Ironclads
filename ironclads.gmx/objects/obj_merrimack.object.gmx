<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_merrimack</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_ship</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(keyboard_check(vk_left))
{
    direction += 0.1 * speed;
}
if(keyboard_check(vk_right))
{
    direction -= 0.1 * speed;
}
if(keyboard_check(vk_up))
{
    speed += 0.02;
}
if(keyboard_check(ord('A')) and timeout &lt;= 0)
{
    for(var i = -1; i &lt;= 1; i++)
    {
        var cannon = instance_create(x + lengthdir_x(i * sprite_width / 2, image_angle), y + lengthdir_y(i * sprite_width / 2, image_angle), obj_cannonball);
        cannon.direction = direction + 90;
        cannon.speed = 10;
        cannon.parent = object_index;
    }
    timeout = 45;
}
if(keyboard_check(ord('D')) and timeout &lt;= 0)
{
     for(var i = -1; i &lt;= 1; i++)
    {
        var cannon = instance_create(x + lengthdir_x(i * sprite_width / 2, image_angle), y + lengthdir_y(i * sprite_width / 2, image_angle), obj_cannonball);
        cannon.direction = direction - 90;
        cannon.speed = 10;
        cannon.parent = object_index;
    }
    timeout = 45;
}
if(keyboard_check(ord('W')) and timeout &lt;= 0)
{
    var cannon = instance_create(x + lengthdir_x(sprite_width / 2, image_angle), y + lengthdir_y(sprite_width / 2, image_angle), obj_cannonball);
    cannon.direction = direction;
    cannon.speed = 10;
    cannon.parent = object_index;
    timeout = 45;
}
if(keyboard_check(ord('S')) and timeout &lt;= 0)
{
    var cannon = instance_create(x + lengthdir_x(sprite_width / 2, -image_angle), y + lengthdir_y(sprite_width / 2, -image_angle), obj_cannonball);
    cannon.direction = direction + 180;
    cannon.speed = 10;
    cannon.parent = object_index;
    timeout = 45;
}
if(timeout &gt; 0)
    timeout -= 1;
if(speed &gt; 3)
    speed = 3;
image_angle = direction;
move_wrap(room_width, room_height, 100)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_cannonball">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
